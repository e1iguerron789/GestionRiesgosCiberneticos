@model CyberRiskManager.Models.Riesgo
@using CyberRiskManager.Models

@{
    ViewData["Title"] = "Registrar nuevo riesgo";
    var activos = ViewBag.Activos as List<Activo>;
}

<h2>@ViewData["Title"]</h2>

<form asp-action="Create" method="post">
    <div class="mb-3">
        <label>Activo afectado</label>
        <select asp-for="ActivoId" class="form-select" id="activoSelect" required>
            @foreach (var a in activos!)
            {
                var selected = a == activos.First() ? "selected" : "";
                <option value="@a.Id" selected="@selected">@a.Nombre</option>
            }
        </select>
        <span asp-validation-for="ActivoId" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <button type="button" class="btn btn-outline-info" onclick="usarIA()">🔍 Sugerir amenazas y vulnerabilidades con IA</button>
    </div>

    <div class="mb-3">
        <label>Amenaza sugerida</label>
        <select asp-for="Amenaza" id="Amenaza" class="form-select">
            <option>-- Selecciona o usa IA --</option>
        </select>
    </div>

    <div class="mb-3">
        <label>Vulnerabilidad sugerida</label>
        <select asp-for="Vulnerabilidad" id="Vulnerabilidad" class="form-select">
            <option>-- Selecciona o usa IA --</option>
        </select>
    </div>

    <div class="mb-3">
        <label>Controles existentes</label>
        <input asp-for="ControlesExistentes" id="ControlesExistentes" class="form-control" autocomplete="off" />
    </div>

    <div class="row mb-3">
        <div class="col">
            <label>Probabilidad</label>
            <input asp-for="Probabilidad" id="Probabilidad" type="range" min="1" max="3" class="form-range" oninput="updateLabel(this,'p')" />
            <span id="label-p">Media 🟠</span>
        </div>
        <div class="col">
            <label>Impacto</label>
            <input asp-for="Impacto" id="Impacto" type="range" min="1" max="3" class="form-range" oninput="updateLabel(this,'i')" />
            <span id="label-i">Media 🟠</span>
        </div>
    </div>

    <button type="submit" class="btn btn-success">Guardar</button>
    <a asp-action="Index" class="btn btn-secondary ms-2">Cancelar</a>
</form>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css" />

    <script>
        const etiquetas = { 1: 'Baja 🟢', 2: 'Media 🟠', 3: 'Alta 🔴' };

        function updateLabel(input, id) {
            const span = document.getElementById('label-' + id);
            if (input && span) {
                span.innerText = etiquetas[input.value];
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            updateLabel(document.getElementById("Probabilidad"), 'p');
            updateLabel(document.getElementById("Impacto"), 'i');
        });

        async function usarIA() {
            const select = document.getElementById('activoSelect');
            if (!select) return;

            const selectedValue = select.value;
            const selectedText = select.options[select.selectedIndex].text;

            try {
                const res = await fetch(`/Riesgos/SugerenciasIA?activoId=${selectedValue}&activoNombre=${encodeURIComponent(selectedText)}`);
                const data = await res.json();

                if (!data.amenazas || !data.vulnerabilidades) {
                    throw new Error("Respuesta inválida");
                }

                const amenazaSel = document.getElementById("Amenaza");
                const vulnerabilidadSel = document.getElementById("Vulnerabilidad");

                amenazaSel.innerHTML = "";
                vulnerabilidadSel.innerHTML = "";

                data.amenazas.forEach(a => {
                    const opt = document.createElement("option");
                    opt.textContent = a;
                    opt.value = a;
                    amenazaSel.appendChild(opt);
                });

                data.vulnerabilidades.forEach(v => {
                    const opt = document.createElement("option");
                    opt.textContent = v;
                    opt.value = v;
                    vulnerabilidadSel.appendChild(opt);
                });

            } catch (err) {
                console.error("Error IA:", err);
                alert("❌ Error al obtener sugerencias de IA.");
            }
        }

        $(function () {
            const $input = $("#ControlesExistentes");

            $input.autocomplete({
                source: function (req, res) {
                    $.getJSON('/Riesgos/SugerirControles', { term: req.term }, res);
                },
                minLength: 0,
                delay: 150
            });

            $input.on("focus", function () {
                $(this).autocomplete("search", "");
            });
        });
    </script>
}
